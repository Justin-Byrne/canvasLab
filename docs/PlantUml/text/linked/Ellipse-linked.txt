@startuml

skinparam DefaultFontSize 16
skinparam DefaultFontName Courier New

class Ellipse {
point      {Point}
angle      {Angle}
stroke     {Stroke}
fill       {Fill}
shadow     {Shadow}
canvas     {HTMLCanvasElement}
anchor     {Anchor}
options    {Options}
location   {Location}
__ Setter __
radius     {Point}
__ Getter __
radius     {Point}
}

Ellipse o-- Point
Ellipse o-- Angle
Ellipse o-- Stroke
Ellipse o-- Fill
Ellipse o-- Shadow
Ellipse o-- HTMLCanvasElement
Ellipse o-- Anchor
Ellipse o-- Options
Ellipse o-- Location



skinparam DefaultFontSize 16
skinparam DefaultFontName Courier New

class Point {
[x=0]          <color:gray>{number}</color>
[y=0]          <color:gray>{number}</color>
options        {Options}
__ Setter __
x              <color:gray>{number}</color>
y              <color:gray>{number}</color>
canvas         <color:gray>{string}</color>
__ Getter __
x              <color:gray>{number}</color>
y              <color:gray>{number}</color>
canvas         <color:gray>{string}</color>
options        {Options}
center         {Point}
__ Validation __
_isAspect      <color:gray>{boolean}</color>
_isInDom       <color:gray>{boolean}</color>
__ Utility __
_drawAxis
_drawBorder
_rotatePoint
drawOptions
invert
move
}



skinparam DefaultFontSize 16
skinparam DefaultFontName Courier New

class Angle {
[start=0]          <color:gray>{number}</color>
[end=360]          <color:gray>{number}</color>
[clockwise=true]   <color:gray>{boolean}</color>
__ Setter __
start              <color:gray>{number}</color>
end                <color:gray>{number}</color>
clockwise          <color:gray>{boolean}</color>
__ Getter __
start              <color:gray>{number}</color>
end                <color:gray>{number}</color>
clockwise          <color:gray>{boolean}</color>
startInRadians     <color:gray>{number}</color>
endInRadians       <color:gray>{number}</color>
__ Validation __
_isDegree          <color:gray>{boolean}</color>
_isRadian          <color:gray>{boolean}</color>
__ Utility __
_convert2Degree    <color:gray>{number}</color>
_convert2Radian    <color:gray>{number}</color>
}



skinparam DefaultFontSize 16
skinparam DefaultFontName Courier New

class Stroke {
[width=2]       <color:gray>{number}</color>
shadow          {Shadow}
__ Setter __
type            <color:gray>{number}</color>
segments        {Array}
color           {Object}
width           <color:gray>{number}</color>
__ Getter __
type            <color:gray>{number}</color>
segments        {Array}
color           {Object}
width           <color:gray>{number}</color>
__ Validation __
_isColorModel   <color:gray>{boolean}</color>
_isSegments     <color:gray>{boolean}</color>
_isStrokeType   <color:gray>{boolean}</color>
_isWidth        <color:gray>{boolean}</color>
}



skinparam DefaultFontSize 16
skinparam DefaultFontName Courier New

class Fill {
gradient        {Object}
pattern         {Pattern}
__ Setter __
color           {Object}
type            <color:gray>{string}</color>
gradient        {Object}
pattern         <color:gray>{string}</color>
repetition      <color:gray>{string}</color>
__ Getter __
color           {Object}
type            <color:gray>{string}</color>
gradient        {Object}
pattern         {Pattern}
repetition      <color:gray>{string}</color>
__ Validation __
_isColorModel   <color:gray>{boolean}</color>
_isGradient     <color:gray>{boolean}</color>
_isFillType     <color:gray>{boolean}</color>
_isRepetition   <color:gray>{boolean}</color>
}



skinparam DefaultFontSize 16
skinparam DefaultFontName Courier New

class Shadow {
[blur=3]        <color:gray>{number}</color>
offset          {Point}
__ Setter __
color           {Object}
blur            <color:gray>{number}</color>
offset          {Point}
x               <color:gray>{number}</color>
y               <color:gray>{number}</color>
__ Getter __
color           {Object}
blur            <color:gray>{number}</color>
offset          {Point}
x               <color:gray>{number}</color>
y               <color:gray>{number}</color>
__ Validation __
_isColorModel   <color:gray>{boolean}</color>
_isBlur         <color:gray>{boolean}</color>
_isPoint        <color:gray>{boolean}</color>
}



skinparam DefaultFontSize 16
skinparam DefaultFontName Courier New

class Anchor {
point       {Point}
align       <color:gray>{string}</color>
__ Setter __
point       {Point}
x           <color:gray>{number}</color>
y           <color:gray>{number}</color>
align       <color:gray>{string}</color>
__ Getter __
point       {Point}
x           <color:gray>{number}</color>
y           <color:gray>{number}</color>
align       <color:gray>{string}</color>
__ Validation __
_isAnchor   <color:gray>{boolean}</color>
}



skinparam DefaultFontSize 16
skinparam DefaultFontName Courier New

class Options {
[anchor=false]          <color:gray>{boolean}</color>
[axis=false]            <color:gray>{boolean}</color>
[border=false]          <color:gray>{boolean}</color>
[coordinates=false]     <color:gray>{boolean}</color>
[controlPoints=false]   <color:gray>{boolean}</color>
[points=false]          <color:gray>{boolean}</color>
[shadow=false]          <color:gray>{boolean}</color>
master                  {Object}
__ Setter __
anchor                  <color:gray>{boolean}</color>
axis                    <color:gray>{boolean}</color>
border                  <color:gray>{boolean}</color>
coordinates             <color:gray>{boolean}</color>
controlPoints           <color:gray>{boolean}</color>
shadow                  <color:gray>{boolean}</color>
master                  {clObject}
__ Getter __
anchor                  <color:gray>{boolean}</color>
axis                    <color:gray>{boolean}</color>
border                  <color:gray>{boolean}</color>
coordinates             <color:gray>{boolean}</color>
controlPoints           <color:gray>{boolean}</color>
shadow                  <color:gray>{boolean}</color>
master                  {clObject}
__ Validation __
_isCanvasLabObject      <color:gray>{boolean}</color>
}



skinparam DefaultFontSize 16
skinparam DefaultFontName Courier New

class Location {
point                {Point}
distance             <color:gray>{number}</color>
direction            <color:gray>{number}</color>
stroke               {Stroke}
fill                 {Fill}
shadow               {Shadow}
canvas               {HTMLCanvasElement}
master               {clObject}
__ Setter __
origin               {Point}
distance             <color:gray>{number}</color>
direction            <color:gray>{number}</color>
master               {clObject}
__ Getter __
origin               {Point}
distance             <color:gray>{number}</color>
direction            <color:gray>{number}</color>
master               {clObject}
__ Validation __
_isCanvasLabObject   <color:gray>{boolean}</color>
_isPoint             <color:gray>{boolean}</color>
}

@enduml
